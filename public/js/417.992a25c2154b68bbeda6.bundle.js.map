{"version":3,"file":"js/417.992a25c2154b68bbeda6.bundle.js","mappings":"yIAIKA,EAAA,E,2FAAA,EAAAA,IAAAA,EAAA,KACH,IAAM,UACN,OAAO,WAGF,MC8BP,EA1BqB,KACnB,MAAM,QAAEC,EAAO,iBAAEC,GDLO,MACxB,MAAQC,KAAMF,EAAU,GAAIG,UAAWF,IAAqB,IAAAG,UAG1DL,EAAWM,KACX,IACEC,MAAM,wDAAeP,EAAWQ,QAC7BC,MAAMC,GAAMA,EAAEC,SACdF,MACEG,GACEA,EAA0DC,SAEnE,CACEC,sBAAsB,IAI1B,MAAO,CACLZ,iBAAAA,EACAD,QAAAA,ICdoCc,GAEtC,OACE,gBAAC,KAAD,CAAQC,QAAS,GACf,gBAAC,IAAD,KAAS,YACRd,GAAoB,gBAAC,KAAD,MACrB,gBAAC,IAAD,CAAMe,IAAK,EAAGC,oBAAoB,kBAC/BjB,EAAQkB,KAAI,EAAGC,IAAAA,EAAKC,MAAAA,EAAOC,YAAAA,EAAaC,SAAAA,EAAUC,YAAAA,MArB3D,MAsBU,uBAAC,IAAD,CAAUlB,IAAKc,GACb,gBAAC,IAAD,CAASK,MAAOJ,GACd,gBAAC,KAAD,CAAKK,QAAQ,OAAOC,MAAM,QACxB,gBAAC,KAAD,CACEC,KAAM,eAAAN,EAAAA,EAAeD,GAAf,EAAwB,GAC9BQ,KAAK,KACLC,IAAK,MAAAP,EAAAA,EAAY","sources":["webpack:///./src/data/useMembers.ts","webpack:///./src/pages/Members.tsx"],"sourcesContent":["import { useQuery } from 'react-query'\nimport { User } from 'firebase/auth'\nimport { functions } from './config'\n\nenum UseMembers {\n  key = 'members',\n  path = '/members',\n}\n\nexport const useMembers = () => {\n  const { data: members = [], isLoading: isLoadingMembers } = useQuery<\n    readonly User[]\n  >(\n    UseMembers.key,\n    () =>\n      fetch(`${functions}${UseMembers.path}`)\n        .then((r) => r.json())\n        .then(\n          (result) =>\n            (result as unknown as { readonly users: readonly User[] }).users,\n        ),\n    {\n      refetchOnWindowFocus: false,\n    },\n  )\n\n  return {\n    isLoadingMembers,\n    members,\n  }\n}\n","import React, { VFC } from 'react'\nimport {\n  Avatar,\n  Grid,\n  GridItem,\n  Heading,\n  VStack,\n  SkeletonCircle,\n  Tag,\n  Tooltip,\n} from '@chakra-ui/react'\nimport { useMembers } from '../data/useMembers'\n\nconst Members: VFC = () => {\n  const { members, isLoadingMembers } = useMembers()\n\n  return (\n    <VStack spacing={6}>\n      <Heading>Miembros</Heading>\n      {isLoadingMembers && <SkeletonCircle />}\n      <Grid gap={8} gridTemplateColumns=\"repeat(8, 1fr)\">\n        {members.map(({ uid, email, displayName, photoURL, phoneNumber }) => (\n          <GridItem key={uid}>\n            <Tooltip label={email}>\n              <Tag padding=\"1rem\" width=\"auto\">\n                <Avatar\n                  name={displayName ?? email ?? ''}\n                  size=\"md\"\n                  src={photoURL ?? ''}\n                />\n              </Tag>\n            </Tooltip>\n          </GridItem>\n        ))}\n      </Grid>\n    </VStack>\n  )\n}\n\nexport default Members\n"],"names":["UseMembers","members","isLoadingMembers","data","isLoading","useQuery","key","fetch","path","then","r","json","result","users","refetchOnWindowFocus","useMembers","spacing","gap","gridTemplateColumns","map","uid","email","displayName","photoURL","phoneNumber","label","padding","width","name","size","src"],"sourceRoot":""}