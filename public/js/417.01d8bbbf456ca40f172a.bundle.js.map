{"version":3,"file":"js/417.01d8bbbf456ca40f172a.bundle.js","mappings":"yIAIKA,EAAA,E,qGAAA,EAAAA,IAAAA,EAAA,KACH,IAAM,UACN,OAAO,WAGF,MCuCP,EAjCqB,KACnB,MAAM,QAAEC,EAAO,iBAAEC,GDPO,MACxB,MAAQC,KAAMF,EAAU,GAAIG,UAAWF,IAAqB,IAAAG,UAG1DL,EAAWM,KACX,IACEC,MAAM,wDAAeP,EAAWQ,QAC7BC,MAAMC,GAAMA,EAAEC,SACdF,MACEG,GACEA,EAA0DC,SAEnE,CACEC,sBAAsB,IAI1B,MAAO,CACLZ,iBAAAA,EACAD,QAAAA,ICZoCc,GAGtC,OAFAC,QAAQC,IAAIhB,EAAQiB,KAAI,EAAGC,MAAAA,KAAYA,IAAOC,KAAK,QAGjD,gBAAC,KAAD,CAAQC,WAAW,aAAaC,eAAe,WAC7C,gBAAC,IAAD,KAAS,YACRpB,GAAoB,gBAAC,KAAD,MAErB,gBAAC,IAAD,CACEqB,IAAI,OACJC,gBAAiB,CAAC,MAAO,iBAAkB,mBAE1CvB,EAAQiB,KAAI,EAAGO,IAAAA,EAAKN,MAAAA,EAAOO,YAAAA,EAAaC,SAAAA,EAAUC,YAAAA,MA5B3D,MA6BU,uBAAC,IAAD,CACEC,GAAG,QACHC,aAAa,MACbC,UAAU,KACVzB,IAAKmB,EACLO,QAAQ,eAER,gBAAC,KAAD,CAAQC,KAAM,eAAAP,EAAAA,EAAeP,GAAf,EAAwB,GAAIe,IAAK,MAAAP,EAAAA,EAAY,KAC3D,gBAAC,KAAD,CAAKQ,GAAG,KACN,gBAAC,IAAD,CAAMC,WAAW,QAAQjB,GACzB,gBAAC,IAAD,CAAMkB,SAAS,MAAMX","sources":["webpack:///./src/data/useMembers.ts","webpack:///./src/pages/Members.tsx"],"sourcesContent":["import { useQuery } from 'react-query'\nimport { User } from 'firebase/auth'\nimport { functions } from './config'\n\nenum UseMembers {\n  key = 'members',\n  path = '/members',\n}\n\nexport const useMembers = () => {\n  const { data: members = [], isLoading: isLoadingMembers } = useQuery<\n    readonly User[]\n  >(\n    UseMembers.key,\n    () =>\n      fetch(`${functions}${UseMembers.path}`)\n        .then((r) => r.json())\n        .then(\n          (result) =>\n            (result as unknown as { readonly users: readonly User[] }).users,\n        ),\n    {\n      refetchOnWindowFocus: false,\n    },\n  )\n\n  return {\n    isLoadingMembers,\n    members,\n  }\n}\n","import React, { VFC } from 'react'\nimport {\n  Avatar,\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  SkeletonCircle,\n  Text,\n  VStack,\n} from '@chakra-ui/react'\nimport { useMembers } from '../data/useMembers'\n\nconst Members: VFC = () => {\n  const { members, isLoadingMembers } = useMembers()\n  console.log(members.map(({ email }) => email).join(' ; '))\n\n  return (\n    <VStack alignItems=\"flex-start\" justifyContent=\"stretch\">\n      <Heading>Miembros</Heading>\n      {isLoadingMembers && <SkeletonCircle />}\n\n      <Grid\n        gap=\"2rem\"\n        templateColumns={['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)']}\n      >\n        {members.map(({ uid, email, displayName, photoURL, phoneNumber }) => (\n          <Flex\n            bg=\"white\"\n            borderRadius=\"2xl\"\n            boxShadow=\"lg\"\n            key={uid}\n            padding=\"1rem 1.2rem\"\n          >\n            <Avatar name={displayName ?? email ?? ''} src={photoURL ?? ''} />\n            <Box ml=\"3\">\n              <Text fontWeight=\"bold\">{email}</Text>\n              <Text fontSize=\"sm\">{displayName}</Text>\n            </Box>\n          </Flex>\n        ))}\n      </Grid>\n    </VStack>\n  )\n}\n\nexport default Members\n"],"names":["UseMembers","members","isLoadingMembers","data","isLoading","useQuery","key","fetch","path","then","r","json","result","users","refetchOnWindowFocus","useMembers","console","log","map","email","join","alignItems","justifyContent","gap","templateColumns","uid","displayName","photoURL","phoneNumber","bg","borderRadius","boxShadow","padding","name","src","ml","fontWeight","fontSize"],"sourceRoot":""}